// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id         String  @id @default(uuid())
  email      String  @unique
  name       String
  password   String
  houseId    Int     @default(1)
  isVerified Boolean @default(false)
  role       Role    @default(MERCADER)
  House      house   @relation(fields: [houseId], references: [id])
  bidHistory bidHistory[]
}

enum Role {
  MERCADER
  MAESTRE
}

model house {
  name         String
  id           Int            @id @default(autoincrement())
  imagePath    String
  balance      Float
  user         user[]
  productStore productStore[]
  auction      auction[]
}

model product {
  name        String
  description String
  id          Int       @id @default(autoincrement())
  auction     auction[]
}

model productStore {
  houseId Int
  id      Int   @id @default(autoincrement())
  price   Float
  stock   Int
  house   house @relation(fields: [houseId], references: [id])
}

model auction {
  id          Int      @id @default(autoincrement())
  houseId     Int
  productId   Int
  basePrice   Float
  quantity    Int
  increment   Float
  probability Float
  endDate     DateTime
  isActive    Boolean
  product     product  @relation(fields: [productId], references: [id])
  house       house    @relation(fields: [houseId], references: [id])
  bidHistory  bidHistory[]
}

model bidHistory {
  id       Int      @id @default(autoincrement())
  auctionId Int
  userId   String
  amount   Float
  date     DateTime
  isWinner Boolean
  auction auction @relation(fields: [auctionId], references: [id])
  user    user    @relation(fields: [userId], references: [id])
}
